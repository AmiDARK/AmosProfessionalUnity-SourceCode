' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
' LIBRARY DIGEST by Francois Lionet  
'
' This program analyse your source code, counts all the
' labels and creates a file called "Source_Size.s" 
' Include this file at the start of your extension.
' It also create a label list called "Source_Labels.s" 
' where all the labels are listed. 
'
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
'
COM$=Command Line$
'
_CLIHANDLE=Doscall(-60) : _CLIINPUT=Doscall(-54)
'
If _CLIHANDLE=0
   A$="CON:0/16/640/96/CLOSE/Library Digest by F.Lionet"+Chr$(0)
   Dreg(1)=Varptr(A$) : Dreg(2)=1004 : _CLIHANDLE=Doscall(-30)
   If _CLIHANDLE : _CLICLOSE=_CLIHANDLE : _CLIINPUT=_CLIHANDLE : End If 
End If 
'
_OUT["AMOSPro II Library digest by François Lionet",2,0]
_OUT["~~~~~~~~~~~~~~~~~~~~~~~~~`~~~~~~~~~~~~~~~~~~",2,0]
_OUT["Public domain, written using AMOS Professional.",2,0]
_OUT["",2,0]

Do 
   
   LEVEL=1 : NAME$="" : ERR=False
   
   ' Extract parameters 
   ' ~~~~~~~~~~~~~~~~~~ 
   _EXTRACT[COM$,1] : NAME$=Param$
   
   If NAME$<>""
      
      ' Get name + directory 
      ' ~~~~~~~~~~~~~~~~~~~~ 
      For C=Len(NAME$) To 1 Step -1
         A$=Mid$(NAME$,C,1)
         Exit If(A$="/") or(A$=":")
      Next 
      PATH$=Left$(FILT$,C)
      
      ' Check file 
      ' ~~~~~~~~~~ 
      ERR=ERR or Not Exist(NAME$)
      If PATH$<>""
         ERR=ERR or Not Exist(PATH$)
      End If 
      
      Exit If ERR=0
      
   End If 
   
   _OUT["",2,0]
   _OUT["Usage: LIBRARY_DIGEST filename",2,0]
   _OUT["",2,0]
   
   _OUT["Please enter command line: ",0,0]
   _IN : COM$=Param$
   If COM$="" : _ABORT : End If 
   
Loop 

' Compute the names of the files 
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
IN$=PATH$+NAME$
N$=NAME$
For C=Len(NAME$) To 1 Step -1
   If Mid$(NAME$,C,1)="."
      N$=Left$(NAME$,C-1)
      Exit 
   End If 
Next 
OUT1$=PATH$+N$+"_Labels.s" : TIT1$=NAME$+", list of the library functions"
OUT2$=PATH$+N$+"_Size.s" : TIT2$=NAME$+", library size"
LAB=0 : NLAB=0
Gosub _SEARCH

_QUIT


' Search routine 
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
_SEARCH:

' Labels to look for in the source code
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LAB0$="Lib_"
LAB1$="Lib_Def"
LAB3$="Lib_Empty"
LAB4$="Lib_Ext"
LAB5$="Lib_Par"
LABSET1$="Lib_Pos"
LABSET2$="Lib_Ini"

_OUT["Loading "+IN$+"...",2,0]

' Load the file  
' ~~~~~~~~~~~~~  
Open In 5,IN$
L=Lof(5)
Reserve As Work 10,L
Sload 5 To Start(10),L
Close 5

ADOLD=Start(10) : ADEND=Start(10)+Length(10)

_DATE$ : D$=Param$ : _TIME$ : T$=Param$

' Open output files  
' ~~~~~~~~~~~~~~~~~  
If OUT1$<>""
   Open Out 1,OUT1$
   Print #1,"; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";Chr$(10);
   Print #1,"; "+TIT1$+" on the "+D$+" "+T$;Chr$(10);
   Print #1,";";Chr$(10);
   Print #1,"; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";Chr$(10);
End If 

If OUT2$<>""
   Open Out 2,OUT2$
   Print #2,"; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";Chr$(10);
   Print #2,"; "+TIT2$+" on the "+D$+" "+T$;Chr$(10);
   Print #2,";";Chr$(10);
   Print #2,"; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";Chr$(10);
End If 

Do 
   
   ADE=Hunt(ADOLD To ADEND,Chr$(10))
   
   Exit If ADE=0
   
   If Peek(ADOLD)<=32
      
      AD=Hunt(ADOLD To ADE,LAB0$)
      
      If AD
         
         A$="" : B1$="" : B2$=""
         
         AD=Hunt(ADOLD To ADE,LABSET1$) : If AD=0 : AD=Hunt(ADOLD To ADE,LABSET2$) : End If 
         If AD
            
            A$=""
            For A=AD To ADE : C$=Peek$(A,1) : Exit If C$<=" " : Next 
            For A=A To ADE : C$=Peek$(A,1) : Exit If C$>" " : Next 
            For A=A To ADE : C$=Peek$(A,1) : Exit If C$<=" " : A$=A$+C$ : Next 
            LAB=Val(A$) : NLAB=LAB : A$=""
            
         Else 
            
            I=0 : AD=Hunt(ADOLD To ADE,LAB1$)
            If AD=0 : AD=Hunt(ADOLD To ADE,LAB4$) : End If 
            If AD=0 : AD=Hunt(ADOLD To ADE,LAB5$) : End If 
            
            If AD
               
               A$=""
               For A=AD To ADE : C$=Peek$(A,1) : Exit If C$<=" " : Next 
               For A=A To ADE : C$=Peek$(A,1) : Exit If C$>" " : Next 
               For A=A To ADE : C$=Peek$(A,1) : Exit If C$<=" " : A$=A$+C$ : Next 
               A$="L_"+A$+":"
               
               If Len(A$)<8
                  A$=A$+Tab$+Tab$+Tab$
               Else If Len(A$)<16
                  A$=A$+Tab$+Tab$
               Else If Len(A$)<24
                  A$=A$+Tab$
               End If 
               
               A$=A$+"set"+Chr$(9)+Mid$(Str$(LAB),2)
               Inc LAB : Inc NLAB
               
            Else 
               AD=Hunt(ADOLD To ADE,LAB3$) : If AD : Inc NLAB : Inc LAB : End If 
            End If 
            
         End If 
         If A$<>""
            Print #1,A$;Chr$(10);
            If(NLAB and 15)=0
               _OUT[Space$(30),1,0]
               _OUT["Computing label"+Str$(LAB),1,0]
            End If 
         End If 
         
      End If 
      
   End If 
   
   ADOLD=ADE+1
   
Loop 

Print #2,"Lib_Size";Tab$;Tab$;"equ";Tab$;Str$(NLAB);Chr$(10);
Close 

_OUT[Space$(78),1,0]
_OUT["Number of labels:"+Str$(NLAB),2,0]

Return 


Procedure _QUIT
   
   Shared _CLICLOSE
   
   _OUT["",2,0]
   
   If _CLIHANDLE
      If _CLICLOSE
         Dreg(1)=_CLICLOSE
         R=Doscall(-36)
      End If 
   End If 
   End 
End Proc
Procedure _DATE$
   '
   ' Call DOS DateStamp function
   T$=Space$(12)
   Dreg(1)=Varptr(T$)
   RIEN=Doscall(-192)
   NJ=Leek(Varptr(T$))
   '
   ' Find this year's first day 
   A=1978 : JOUR=7
   Do 
      BIS=0 : If(A and 3)=0 : BIS=1 : End If 
      Exit If NJ-365-BIS<0
      Add JOUR,1+BIS : If JOUR>7 : Add JOUR,-7 : End If 
      Add NJ,-365-BIS
      Inc A
   Loop 
   '
   ' Find month 
   M=1
   Do 
      Read N
      Exit If NJ-N<0
      Add NJ,-N : Inc M
   Loop 
   Inc NJ
   '
   ' Fabrique la chaine 
      J$=Mid$(Str$(NJ),2) : If Len(J$)<2 : J$="0"+J$ : End If 
      M$=Mid$(Str$(M),2) : If Len(M$)<2 : M$="0"+M$ : End If 
      A$=Mid$(Str$(A),2)
      DATE$=J$+"-"+M$+"-"+A$
   '
   ' Length of each month 
   Data 31,28+BIS,31,30,31,30,31,31,30,31,30,31
   '
End Proc[DATE$]
Procedure _TIME$
   '
   ' Call DOS function
   T$=Space$(12)
   Dreg(1)=Varptr(T$)
   RIEN=Doscall(-192)
   MN=Leek(Varptr(T$)+4)
   SEC=Leek(Varptr(T$)+8)
   '
   ' Minutes calculation
   H=MN/60 : H$=Mid$(Str$(H),2) : If Len(H$)<2 : H$="0"+H$ : End If 
   M=MN mod 60 : M$=Mid$(Str$(M),2) : If Len(M$)<2 : M$="0"+M$ : End If 
   '
   ' Seconds calculation  
   S=SEC/50 : S$=Mid$(Str$(S),2) : If Len(S$)<2 : S$="0"+S$ : End If 
   '
   ' Final string 
   TIME$=H$+":"+M$+":"+S$
   '
End Proc[TIME$]
Procedure _CLOSE_OUT
   
   Shared _CLIHANDLE,_CLICLOSE
   
   If _CLIHANDLE
      If _CLICLOSE : Dreg(1)=_CLICLOSE : R=Doscall(Lvo("Close")) : Amos To Front : End If 
   Else 
      Wait 50 : Screen Close 0
   End If 
   
End Proc
Procedure _OUT[A$,R,D]
   
   Shared _CLIHANDLE,_CLICLOSE
   
   If D<=LEVEL
      If _CLIHANDLE
         If R=1 : A$=A$+Chr$($D) : End If 
         If R=2 : A$=A$+Chr$($A) : End If 
         Dreg(1)=_CLIHANDLE : Dreg(2)=Varptr(A$) : Dreg(3)=Len(A$)
         R=Doscall(Lvo("Write"))
      Else 
         Print A$;
         If R=1 : Locate 0, : End If 
         If R=2 : Print : End If 
      End If 
   End If 
   
End Proc Procedure _IN
Procedure _IN
   
   Shared _CLIHANDLE,_CLIINPUT
   
   If _CLIINPUT
      Do 
         Multi Wait 
         Dreg(1)=_CLIINPUT : Dreg(2)=10 : R=Doscall(-204)
         If R
            While R
               A$=Space$(1)
               Dreg(1)=_CLIINPUT : Dreg(2)=Varptr(A$) : Dreg(3)=Len(A$) : R=Doscall(-42)
               If A$>=" " : IN$=IN$+A$ : End If 
               Dreg(1)=_CLIINPUT : Dreg(2)=10 : R=Doscall(-204)
            Wend 
            Pop Proc[IN$]
         End If 
      Loop 
   End If 
   If _CLIHANDLE=0
      Curs On 
      Line Input " ";IN$
      Curs Off 
      Pop Proc[IN$]
   End If 
   
End Proc[""]
Procedure _EXTRACT[COM$,POS]
   '
   ' Analyse d'une ligne de commande
   ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   A$=""
   '
   P=1 : While Mid$(COM$,P,1)=" " : Inc P : Wend 
   If POS>1
      For C=2 To POS
         OP=P
         P=Instr(COM$," ",OP) : Exit If P=0
         While Mid$(COM$,P,1)=" " : Inc P : Wend 
      Next 
   End If 
   If P
      PP=Instr(COM$," ",P)
      If PP=0 : PP=Len(COM$)+1 : End If 
      A$=Mid$(COM$,P,PP-P)
   End If 
   '
End Proc[A$]
Procedure _ABORT
   
   _OUT["",2,0]
   _OUT["Program aborted!",2,0]
   _QUIT
   
End Proc
