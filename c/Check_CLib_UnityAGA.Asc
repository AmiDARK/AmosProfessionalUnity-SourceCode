' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
' CHECK CLIB by Francios Lionet  
'  
' Verifie la validitie de +CLIB.s  
'
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
'
Comp Test Off : Break Off 
'
LAB0$="Lib_"
LAB1$="Lib_Cmp"
LAB2$="Lib_End"
LAB3$="Lib_Pos"
'
_CLIHANDLE=Doscall(-60) : _CLIINPUT=Doscall(-54)
'
If _CLIHANDLE=0
   A$="CON:0/16/640/96/Check CLib by F.Lionet updated by F.Cordier"+Chr$(0)
   Dreg(1)=Varptr(A$) : Dreg(2)=1004 : _CLIHANDLE=Doscall(-30)
   If _CLIHANDLE : _CLICLOSE=_CLIHANDLE : _CLIINPUT=_CLIHANDLE : End If 
End If 
'
'
' Charge la +LEQU.s
' ~~~~~~~~~~~~~~~~~
Open In 1,"src/AmosProUnityAGA_Lib_Equ.s"
L=Lof(1)
Reserve As Work 11,L
_OUT["Loading LEqu.s...",2,0]
Sload 1 To Start(11),L
Close 1
ADHUNT=Start(11) : ADHUNTEND=ADHUNT+L

' Charge +CLIB.s 
' ~~~~~~~~~~~~~~ 
IN$="src/AmosProUnityAGA_CLib.s"
_OUT["Loading "+IN$+"...",2,0]
Open In 1,IN$
L=Lof(1)
Reserve As Work 10,L
Sload 1 To Start(10),L
Close 1
'
ADOLD=Start(10) : ADEND=Start(10)+Length(10)
'
Do 
   ADE=Hunt(ADOLD To ADEND,Chr$(10))
   If ADE=0 : _OUT["Bad library!",2,0] : Goto FIN : End If 
   AD=Hunt(ADOLD To ADE,"Lib_Ini") : Exit If AD
   ADOLD=ADE+1
Loop 
'
ADOLD=AD+1
'
Do 
   ADE=Hunt(ADOLD To ADEND,Chr$(10))
   Exit If ADE=0
   If Peek(ADOLD)<=32
      AD=Hunt(ADOLD To ADE,LAB0$)
      If AD
         AD=Hunt(ADOLD To ADE,LAB1$)
         If AD
            A$=""
            For A=AD To ADE : C$=Peek$(A,1) : Exit If C$<=" " : Next 
            For A=A To ADE : C$=Peek$(A,1) : Exit If C$>" " : Next 
            For A=A To ADE : C$=Peek$(A,1) : Exit If C$<=" " : A$=A$+C$ : Next 
            A$="L_"+A$+":"
            A=Hunt(ADHUNT To ADHUNTEND,A$)
            If A=0
               _OUT["Label problem: "+Peek$(ADOLD,100,Chr$(10)),2,0]
            Else 
               ADHUNT=A+1
            End If 
         Else 
            AD=Hunt(ADOLD To ADE,LAB2$) : Exit If AD
            AD=Hunt(ADOLD To ADE,LAB3$)
            If AD=0
               _OUT["LIB_DEF still present: "+Peek$(ADOLD,100,Chr$(10)),2,0]
            End If 
         End If 
      End If 
   End If 
   ADOLD=ADE+1
Loop 
'
FIN:
If _CLIHANDLE
   If _CLICLOSE
      Dreg(1)=_CLICLOSE
      R=Doscall(-36)
   End If 
End If 
End 

Procedure _DATE$
   '
   ' Call DOS DateStamp function
   T$=Space$(12)
   Dreg(1)=Varptr(T$)
   RIEN=Doscall(-192)
   NJ=Leek(Varptr(T$))
   '
   ' Find this year's first day 
   A=1978 : JOUR=7
   Do 
      BIS=0 : If(A and 3)=0 : BIS=1 : End If 
      Exit If NJ-365-BIS<0
      Add JOUR,1+BIS : If JOUR>7 : Add JOUR,-7 : End If 
      Add NJ,-365-BIS
      Inc A
   Loop 
   '
   ' Find month 
   M=1
   Do 
      Read N
      Exit If NJ-N<0
      Add NJ,-N : Inc M
   Loop 
   Inc NJ
   '
   ' Fabrique la chaine 
      J$=Mid$(Str$(NJ),2) : If Len(J$)<2 : J$="0"+J$ : End If 
      M$=Mid$(Str$(M),2) : If Len(M$)<2 : M$="0"+M$ : End If 
      A$=Mid$(Str$(A),2)
      DATE$=J$+"-"+M$+"-"+A$
   '
   ' Length of each month 
   Data 31,28+BIS,31,30,31,30,31,31,30,31,30,31
   '
End Proc[DATE$]
Procedure _TIME$
   '
   ' Call DOS function
   T$=Space$(12)
   Dreg(1)=Varptr(T$)
   RIEN=Doscall(-192)
   MN=Leek(Varptr(T$)+4)
   SEC=Leek(Varptr(T$)+8)
   '
   ' Minutes calculation
   H=MN/60 : H$=Mid$(Str$(H),2) : If Len(H$)<2 : H$="0"+H$ : End If 
   M=MN mod 60 : M$=Mid$(Str$(M),2) : If Len(M$)<2 : M$="0"+M$ : End If 
   '
   ' Seconds calculation  
   S=SEC/50 : S$=Mid$(Str$(S),2) : If Len(S$)<2 : S$="0"+S$ : End If 
   '
   ' Final string 
   TIME$=H$+":"+M$+":"+S$
   '
End Proc[TIME$]
Procedure _OUT[A$,R,D]
   
   Shared _CLIHANDLE,_CLICLOSE
   
   If D<=LEVEL
      If _CLIHANDLE
         If R=1 : A$=A$+Chr$($D) : End If 
         If R=2 : A$=A$+Chr$($A) : End If 
         Dreg(1)=_CLIHANDLE : Dreg(2)=Varptr(A$) : Dreg(3)=Len(A$)
         R=Doscall(Lvo("Write"))
      Else 
         Print A$;
         If R=1 : Locate 0, : End If 
         If R=2 : Print : End If 
      End If 
   End If 
   
End Proc
Procedure _IN
   
   Shared _CLIHANDLE,_CLIINPUT
   
   If _CLIINPUT
      Do 
         Multi Wait 
         Dreg(1)=_CLIINPUT : Dreg(2)=10 : R=Doscall(Lvo("WaitForChar"))
         If R
            While R
               A$=Space$(1)
               Dreg(1)=_CLIINPUT : Dreg(2)=Varptr(A$) : Dreg(3)=Len(A$) : R=Doscall(Lvo("Read"))
               If A$>=" " : IN$=IN$+A$ : End If 
               Dreg(1)=_CLIINPUT : Dreg(2)=10 : R=Doscall(Lvo("WaitForChar"))
            Wend 
            Pop Proc[IN$]
         End If 
      Loop 
   End If 
   If _CLIHANDLE=0
      Curs On 
      Line Input " ";IN$
      Curs Off 
      Pop Proc[IN$]
   End If 
   
End Proc[""]

