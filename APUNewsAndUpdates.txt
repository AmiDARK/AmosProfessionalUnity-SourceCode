
http://oldwww.nvg.ntnu.no/amiga/MC680x0_Sections/mc68000timing.HTML

; **************************************************************
TO DO :
- AGA Rainbow compatible with ECS ones
- Detect CPU+FastRam performances to see if blitter is faster than Cpu+FastRam and then select CPU or BLITTER for FIcons paste method.
  To do this, I must do some tests in WinUAE to see where the CPU+Ram start to be faster than Blitter
- Interleaved Bitmaps for screens (Alper Snomez email 2021.04.04) and interleaved sprites/bobs/images bank.
- Check if there is a limit of 256, in amount of blitter objects (BOBS) (Wayne Ashworth)
  ( see : https://www.facebook.com/groups/AmosPro/permalink/1429645217373474/?comment_id=1429708457367150&reply_comment_id=1430000350671294 )
- Fix ECS scrolling issue (in Dual Playfield if I'm not wrong)
- Integrat Sprite FX to ECS version of Amos Professional Unity Personal LIB
- Update ECS screen sizes limits to 2048x2048 for next release

Rainbow RGB24 Bits color support :
- Identified 2 places where copper colors are push inside copper list in file CopperListSystem.s . Actually : #563 & #596

PersonalUnity.lib :
- ADD new Sprite FX commands like 
    * Create Line Effects Bank BANKID
    * Set Current Line Effects Bank BANKID
    * Change Sprite Color Palette LINEID
    * Change Colour Line LINEID, COLORID, RGB24Value
    * Insert Full Screen Offset LINEID,OFFSETVALUE(Optional)
    * Update Full Screen Offset LINEID,OFFSETVALUE
    * Update Lines Effects (update the copper list with all effects)
    * Remove Line Effects (clear all change sprite color palette, change colour line, screen offsets)

Amos Professional Unity improvements :
- Add 25 new external registers for AMAL like ZA-ZZ (Instead of classics RA-RZ ones) : https://github.com/AmiDARK/AmosProfessionalUnity-Official-Releases/issues/11

AMCAF Port :
- Add Protracker replay routines from the original AMCAF extension to Amos Professional Unity AMCAFLight.lib

BUG :
- (Always existing ?) Save Iff on 32 colors, IFF file cannot be loaded by PPaint. (compression format not recognized)

TO DO AFTER :
- Create a compilation process that allow to load .ASCII, tokenise them (test) and then compiles them to .exe (like compiler) to make .ASCII being compilable from commons IDE.
- Use APUCMP from Cli to compile Amos Professional Unity applications.
- check how APUCMP parameters are used to create Cli/Workbench/nogfx, etc. configurations to see if I can integrate a window mode.
- Create a method that return the ID of the CPU, one for FPU (if available) and one for CPU frenquency if possible.
- Reinsert error messages for IffBODY : IFFWidthTooBig, IFFHeightTooBig, IFFDepthTooBig

Michael Ness Good Idea :
- Try to makes blitter push 32 colors palette to reach maximum amount of colors in 1 raster line. Look how HsBlit do a single memory copy.
Do once for all calls : BltModC,BltModD
BltSrcC, BltSrcD

; **** Memory Banks Bits defined in the project :
Bnk_BitMemblock  Equ    4            ; = Bnk.BitReserved0
Bnk_BitPalette   Equ    5            ; = Bnk.BitReserved1
Bnk_BitFIcons    Equ    6            ; = Bnk_BitReserved2
Bnk_BitCopperFX  Equ    7            ; = Bnk_BitReserved3 -> Used for all Screen(s)FX banks. A word inside the bank define the ID of the FX.

To Do :

Special Variables :
+----------------+-------+------------+
| Key Name       | Val   | Priority*  | Priority* = The treatment order for the values
+----------------+-------+------------+ in Get Screen Mode(W,H,D,F) concerning optional
| CheckECSModes  | $0100 | Priority 1 | Format. If a "???Only" is enabled and found, 
| CheckAGAModes  | $0200 | Priority 2 | it stop checking order and uses the found mode.
| CheckSAGAModes | $0400 | Priority 3 |
+----------------+ $0800 +            +
| ECSOnly        | $0010 | Priority 4 |
| AGAOnly        | $0020 | Priority 5 |
| SAGAOnly       | $0040 | Priority 6 |
+----------------+ $0080 +------------+
| BestMode       | $0000 | Priority 7 |
+----------------+-------+------------+
Priority* = The treatment order for the values in Get Screen Mode(W,H,D,F) concerning optional Format.
If a "???Only" is enabled and found, it stop checking order and uses the found mode.

APUGFXMODE = Get Screen Mode(Width,Height,Depth(,format))
                 Width = Width in pixels of the full screen
                 Height = Height in pixels of the full screen
                 Depth = Depth in bitplanes count (ECS/AGA) or color format (SAGA)
                 format = define checking limits (BEST->SAGA,then AGA,Then ECS; SAGAOnly, AGAOnly, ECSOnly, CheckSAGA, CheckAGA, CheckECS)
                 if 'format' is not set (optional), then BEST is selectionned.
  This method will return a formatted value :
APUGFXMODE      : 
Bit#15          : GFX FORMAT BIT#2
Bit#14          : GFX FORMAT BIT#1
                : 1,1=SAGA; 0,1=AGA; 0,0=ECS; (In the future 1,0=Other Graphics Systems Intuition RTG,etc.)
Bit#13          : Ham Mode Enabled/Disabled (HAM6 if 6 Bitplanes & HAM8 if 8 bitplaned)
Bits#08-12      : Graphic Resolution Mode    | SAGA | ECS  | AGA
                    $01 = 320x200            |  Y      Y      Y     = Lowres NTSC
                    $02 = 320x240            |  Y      Y      Y     = Lowres (PAL)
                    $03 = 320x256            |  Y      Y      Y     = Lowres PAL
                    $04 = 640x400            |  Y      Y      Y     = Hires + Laced NTSC
                    $05 = 640x480            |  Y      Y      Y     = Hires + Laced (PAL)
                    $06 = 640x512            |  Y      Y      Y     = Hires + Laced PAL
                    $07 = 960x240            |  Y      X      X
                    $08 = 480x270            |  Y      X      X
                    $09 = 304x224            |  Y      X      X
                    $0A = 1280x720           |  Y      X      X
                    $0B = 640x360            |  Y      X      X
                    ... = ...                |  Future Saga Graphics Resolutions


; ************************************************************************
; 2023.09.12
- Added command "=get screen bitmap()"

; ************************************************************************
; 2023.09.07
- Added internal Unity Support method InputIsRGB12HL
- Added command "get rgb12h from rgb24"
- Added command "get rgb12l from rgb24"
- Added command "get rgb24 from rgb12hl"
- Fix Load Iff Color Palette issue

; ************************************************************************
; 2023.08.17
- Fixed Copper Off / Copper On issue
- Tested AGE V102-Beta-01 Working on Amos Professional Unity
- Tested Alper Game Engine Working on Amos Professional Unity

; ************************************************************************
; 2023.08.09 
- Update APUnity_Editor_Config.s for update3 label description.
- Readding AmosProUnitySAGA.library compilation/build in file AMOSProUnity_library.batch
- Upgrade 11 batch files done

; ************************************************************************
; 2023.08.07
- Update Header.s bank load to handle AGAP color mode ( 256 colors AGA ) from Bank that are inside executable (Bob/Sprite/Icon)
- Previous update also fix Get Bob/Sprite/Icon Palette commands when program is compiled.
- Update CompExt.s compiler extension for squashed programe to handle AGAP color mode (Bob/Sprite/Icon)

; ************************************************************************
; 2023.08.06
- Upgrade compiler to compile with AGAP Sprites/Bobs/Icons banks
- Fixed issue with Get Bob/Sprite/Icon palette to now handle fully RGB24 bits colors

; ************************************************************************
; 2023.08.02
- Reverted Compiler_Shell.AMOS to Original fixed a compiler crash
- Fix AMOSProUnity_Support.Lib functions set fixed a compiler crash
- Fix AMOSProUnity_SpecialFX.Lib functions set fixed a compiler crash
- Now Amos Professional Unity examples can be compiled without crash


; ************************************************************************
; 2023.02.16
- Reverted Aga/sprites.s file to previous version due to a bug in Aga Sprites.

; ************************************************************************
; 2022.10.12 :
- Added SAGA CPU/GFX Detection at startup to open SAGA library version when available.
- Added SAGA Chunky screen support in copper list.

; ************************************************************************
; 2021.12.21 :
- Added new command : GFXMODE = get saga c2p screen mode( Width, Height, Depth, Scanmode )  [AmosProUnity.lib/L_L_GetSagaC2PScreenModeEx]
- Added new command : GFXMODE = get saga c2p screen mode( Width, Height, Depth )            [AmosProUnity.lib/L_GetSagaC2PScreenMode]
- Started new command : open custom screen ScreenID, Width, Height, GFXMODE


; ************************************************************************
; 2021.10.25 :
- Removed non kept extra commands for Custom Screens modes. Rebuild all the Custom Screens system.
- Added space in file 'configuration/APUnity_Editor_Config.s' for eXtensions registration system

; ************************************************************************
; 2021.04.22 :
- Fixed ECS Dual playfield bug
- Git Push
- Relabelled AmosProUnityAll_Library to AmosProUnityCommon_Library
- Optimised AmosProUnityECS/AGA_library files pushing common unchanged files to AmosProUnityCommon_Library
- Git Push
- Preparing Public Alpha Release 2
- Public Alpha Release 2 - Released!

; ************************************************************************
; 2021.04.20 :
- Fixed bug in AmosProUnityAGA.library/Sprites.s that caused memory issues and crash at startup (checking added)
- Fixed bug in AmosProUnityAGA.library/Screens.s/EcDouble/ that caused double buffer bitmaps not being free at closing screen.
- Renamed AmosProUnity_Personal.lib to AmosProUnity_SpecialFX.lib
- Git Push
- Fixed crash when using Simple Rainbow FX in direct mode
- Git Push
- fixed AGA Unity Fading did not fade the last color (#255)


; ************************************************************************
; 2021.04.18 :
- Added Unity command : Create Rainbow FX Bank BANKID
- Added Unity command : Set Rainbow Fx Color BANKID,COLOR_INDEX
- Added Unity command : Set Rainbow Fx Color Valuer BANKID, Y_HARDWARE_LINE, RGBVALUE(rgb12/15/24)
- Added Unity command : Apply Rainbow Fx To Screen BANKID (CurrentScreen)
- Added unity command : Remove Rainbow Fx From Screen (CurrentScreen)
- Added Unity command : RGB24COLORVALUE = Get Rainbow Fx Color Line (BANKID, Y_HARDWARE_LINE)
- Git Push
- Update EcsUnity/CopperListSystem to handle Sprite/Rainbow FX system
- Found and reintroducted to help in development true AmosPersonal.lib version 1.1c source code with SpecialFX lib files (latest)


; ************************************************************************
; 2021.04.15 :
- Moved insertSpriteFX methods inside their target location "AmosPro_PersonalUnity.lib"
- Fixed insertSpriteFX for 1 to 6 bitplanes : All OK
- Added error message for incompatibles images width/depth + Screen depths combinations
- Detailled list of compatibles sprites modes on the official Website


; ************************************************************************
; 2021.04.14 :
- Updated method "Set Playfield Priorities" (removed the 's' to Playfield)
- Updated Fading Methods to use Color Conversions macros/methods
- Updated TriplePlayfield with Sprites Demonstration


; ************************************************************************
; 2021.04.13 :
- Improved "Set Sprite As Playfield" (support 192 pixels 16 colors with 128 colors screen).
- Improved Triple Playfield Demonstration.
- Fixed Color issue and fading.


; ************************************************************************
; 2021.04.12B :
- Set Sprite As Playfield SPRITEID, YSTART, HEIGHT update (update full sprite composition width support)


; ************************************************************************
; 2021.04.12 :
- Set Sprite As Playfield SPRITEID, YSTART, HEIGHT update (nearly completed)

; ************************************************************************
; 2021.04.10 :
- Start working on special SpritesFX "Set Sprite As Playfield"

; ************************************************************************
; 2021.04.07 :
- Updated AmosProUnityAGA.library/CopperListSystem.s to handle AGA Sprites color palette selection in copper lists with default ECS/OCS compatible settings
- Added UnitySupport.lib/SetSpritePalette method to define AGA Sprites color palette
- Added UnitySupport.lib/GetSpritePalette method to return the AGA Sprites color palette
- Tests Sprite Color Palette Selection : OK


; ************************************************************************
; 2021.04.05 :
- Updated AmosProUnityAGA.library/Sprites.s/HsAdP(1) to fix sprite joining in Sprite update method (without blitter copy)


; ************************************************************************
; 2021.04.04 :
- Updated AmosProUnityAGA.library/Sprites.s/HsBlit to handle images smaller than the current AGA Sprite Width.


; ************************************************************************
; 2021.04.02 :
- Full reintegration of AGA sprite support to fix issues.
- Added auto update of screens FMODE when changing the sprite width.
- Fixed FMode Update


; ************************************************************************
; 2021.04.01 :
- Update clearSpriteEnding to not move a0 forward.


; ************************************************************************
; 2021.03.31 :
- Update AmosProUnityAGA.library/InternalMouseHandler.s/MousInt to handle Aga Sprites 16,32,64 control words update


; ************************************************************************
; 2021.03.30 :
- AmosProUnityAGA.library/Sprites.s/HsBlit updated to handle blitting of 16,32 and 64 Pixels wide sprites (width)


; ************************************************************************
; 2021.03.26 :
- Update copper list to fix the small graphics bugs on top left corner
- Update copper list to fix real-time mode graphics glitches when direct mode screen goes low on screen display.
- Reintegrated copper auto detection for original Sprites + AGA Colors


; ************************************************************************
; 2021.03.25 :
- Added method "Set Sprite Width WIDTH" (can handle 16, 32 and 64 ) to setup AGA width mode
- Updated AmosProUnityAGA.library/Sprites.s/HsRBuf to handle the allocation of AGA sprites with Width = 16, 32 and 64
- Set Sprite Buffer is automatically updated as it call the updated methods.
- Added method "= Get Sprite Buffer" to return the value set with the original Amos Professional Command "Set Sprite Buffer"


; ************************************************************************
; 2021.03.22 :
- Fixed Rainbow compilation (.exe) issue in AGA Unity & ECS Unity
- Restored ResTempBuffer in AmosProLoader.s


; ************************************************************************
; 2021.03.18
- AmosPro_PersonalUnity.lib method : Get File Size(FILENAME$) is now compatible OS1.3 (before it was 2.0+)


; ************************************************************************
; 2021.03.17
- Added AmosPro_PersonalUnity.lib method : Get File Size(FILENAME$)
- Added AmosPro_UnitySupport.lib method : Grab Screen Palette BANKID

; ************************************************************************
; 2021.03.16
- Added support for true 64 colors AGA screens

; ************************************************************************
; 2021.03.15
- Fixed a bug in AmosProUnity_Lib.s/IffFormPlay that didn't returned to caller and cause I/O Error.
- Fixed a bug in the command Load Cmap To Palette
- Added support for dual playfield for Unity Fade methods.


; ************************************************************************
; 2021.03.14
- Fixed an issue in "Create Palette" methods when color palette bank already exists
- Fixed an issue in "Create Memblock" methods when memblock bank already exists
- Fixed an issue in "Reserve F Icon" methods when Fast Icon bank already exists


; ************************************************************************
; 2021.03.13
- Planet Zybex updated as "Get Palette" now detect exact screen colour amount to get and does not copy colours outside the screen range.
- Wonderland tested OK.
- Assign updated for Amos Professional Unity
- Editor & Interpreter configurations creation updated
- Amos Professional Unity Editor menu links to launch applications updated and tested ok.
- Update Compiler/APComp.s for Sprites & Icons banks with AGAP mode (256 colors)
- Fixed the issue that prevented Amos Professional Unity compiled program from returning to WorkBench on exit.
- Update Compiler/Header.s to handle new AmosProUnityXXX.library instead of old AMOS.library 
--- Pushed to repository
- Added AGA Unity methods : Unity Fade SPEED, Unity Step Fade STEP, Unity Fade To Palette COLORPALETTEBANK
- Updated Unity Fading methods to works on ECS Unity.


; ************************************************************************
; 2021.03.12
AmosPro_UnitySupport.lib :
- Updated SeparateRGBComponents, MergeRGBComponents and ForceToRGB24 to cast an error when an unknown input format is detected
- Optimized L_CreatePalette3 checking for amount of colors requested in creation process
- Added RGB24Value = Get Palette Color( PaletteBANKID, ColorINDEX ) (method GetPaletteColourID )
- Added Set Palette Color( PaletteBANKID, ColorINDEX, RGB12/15/24ColorValue ) (method SetPaletteColourID )


; ************************************************************************
; 2021.03.11
PersonalUnity.lib :
- Added : Paste F Icon ICONID,XPOS,YPOS[,MASKMODE] method where XPOS & YPOS are multiple of 16


; ************************************************************************
; 2021.03.10
PersonalUnity.lib :
- Added : = Get Current F Icon Bank()
- Added : Get F Icon ICONID,XPOS,YPOS (XPos = multiple of 16)


; ************************************************************************
; 2021.03.10
- Updated Bnk.Load & Bnk.SaveA0 to handle futures Banks DataType (Use Banks Flags Bnk_BitReserved1-4)
PersonalUnity.lib :
- Added : Reserve F Icon BANK_ID,ICONS_AMOUNT
- Added : Set Current F Icon Bank BANK_ID


; ************************************************************************
; 2021.03.09
- Updated Bnk.Load & Bnk.SaveA0 to handle Memblock and Palette banks datatypes
- Updated Screen Copy for 8 Bitplanes (AGA Unity)


; ************************************************************************
; 2021.03.08
- Added : Load CMAP To Palette FILENAME$, INDEX


; ************************************************************************
; 2021.03.06
- AGA Unity : Fixed a bug in the orignal ECS/OCS fading system.
- AGA Unity : Fixed Colour Index #32 update bug.
- Start New Integration of Personal.lib as AmosProUnity_Personal.lib
- Personal commands added : Set Ntsc, Set Pal, = Right Click(), = Fire( 1,2 ), = Fire( 1,3 ), = EHB
- Created AmosProUnity_Support.lib methods :
  - Create Palette INDEX
  - Create Palette INDEX, COLOURSAMOUNT(=2,4,8,16,32,64,128,256)
  - = Get Palette Colours Amount( INDEX )


; ************************************************************************
; 2021.03.01
- Created : Create Memblock MEMBLOCKID,SIZE_IN_BYTES created and working.
- Created : = Memblock Exist( MEMBLOCKID )
- Created : = Get Memblock Size( MEMBLOCKID )
- Created : Write Memblock Long MEMBLOCKID, POSITION, INTEGER(32Bits)
- Created : Write Memblock Word MEMBLOCKID, POSITION, WORD(16Bits)
- Created : Write Memblock Byte MEMBLOCKID, POSITION, BYTE(8Bits)
- Created : LONG = Memblock Long( MEMBLOCKID, POSITION )
- Created : WORD = Memblock Word( MEMBLOCKID, POSITION )
- Created : BYTE = Memblock Byte( MEMBLOCKID, POSITION )


; ************************************************************************
; 2021.02.28
- Fixed the graphic update issue in Amos Professional productivity Wonderland game. Now bobs refresh works as expected.
- Tested with AGA bobs (256 colors) : Everything is now OK.
- Updated ExtractedFromAmosProLib : Bnk.SaveA0, AMP_Bnk.Ric2
- ECS Unity Save bobs/icons using Classics format (old ECS method)
- ECS Unity can load AGA Unity save bobs/icons and uses them if they uses no more than 6 bitplanes (Extra AGA bitplanes will be simply ignored)
----
- Fixed =Colour(INDEX) bug
- Start inserting new commands from Amos Professional X project
- Inserted : =Is Aga Available(), =Is Ham8(), Ham8, Ham6,
- Inserted : =Rgb24(Red8,Green8,Blue8), =RgbR8( RGBValue12/15/24 ), =RgbG8( RGBValue12/15/24 ), =RgbB8( RGBValue12/15/24)
- Inserted : =Rgb12(Red4,Green4,Blue4), =RgbR4( RGBValue12/15/24 ), =RgbG4( RGBValue12/15/24 ), =RgbB4( RGBValue12/15/24)


; ************************************************************************
; 2021.02.27
- Fixed Get Bob & Paste Bob crashs
- AGA Unity Load/Save bob/Icons now works and handle AGAP Mode
- AGA Unity Will always Save Bob/Icon using Amos Professional Unity method (AGAP Mode)
- AGA Unity can load both Classics and Unity methods (AGAP Mode) Bob/Icon
- Fixed Colour INDEX,RGBVALUE bug
- Find a graphic update issue in Amos Professional Productivity Wonderland game (bobs are not cleared from screen)


; ************************************************************************
; 2021.02.26 : SPack & Unpack retro compatibility with Amos Professional Classics + Improvements
- Major improvements for commands : SPack SCREEN To BANK, UnPack BANK To SCREEN
- ECS Unity will always SPack using Amos Professional 2.0 Classics methods (old ECS method)
- ECS Unity can UNPACK AGA Unity (AGAP Mode) methods if bitplanes amount <=6( ECS limits )
- AGA Unity Will always SPack using Amos Professional Unity method (AGAP Mode)
- AGA Unity can load, and unpack both Classics and Unity methods (AGAP Mode)
- ECS Unity Screen Opening EcCree method updated to handle AGA Unity AGAP Mode for screens up to 6 bitplanes.


; ************************************************************************
; 2021.02.22-23
- Erased all works using AGA because many crashs were available.
- Restarted AGA .library from ECS one
- Inserted a special vector call to allow the use of "Rjmp L_Error" from everywhere in Amos Professional Unity. Required for extraction.
- Inserted in AGA Extracted : IffPal, InScreenOpen, IffBODY, prepareHam8Logic, IffScreen, SaveCMAP, (AMP_)GSPal, (AMP_)PalRout, (AMP_)InGetPalette2
- Inserted in AGA Extracted : IFFWidthTooBig, IFFHeightTooBig, IFFDepthTooBig, (AMP_)UnPack_Screen, (AMP_)UnPack_Bitmap, (AMP_)IffFormLoad, (AMP_)IffForm, (AMP_)IffFormPlay
- Inserted in AGA Extracted : (AMP_)Bnk.EffBobA0
- Updated in AmosProUnity.lib : Bnk.Load, Bnk.GetAdr, Bnk.GetBobs, Bnk.GetIcons, Bnk.AdBob, Bnk.Change, InGetIconPalette1, InBob, InGetSprite6, InGetSprite5
- Updated in AmosProUnity.(I)lib : InFade(?)
- Updated in AmosProfessionalUnityAGA.library : GetBob, TPatch, BobSet, BobLim, BbEcOff, BobCalc, BobAff, BM*** methods, TAMOSWb, DrawBloc
- Updated AmodProfessionalUnityAGA.library files : BraList_Screens.s, AmosProLibrary_Start.s, Autoback.s, CopperListSystem.s, FadingSystem.s, MemoryHandler.s
- Updated AmodProfessionalUnityAGA.library files : RainbowsSystem.s, Screens.s, Texts.s
- Restoring previous Amos LoadView (AmosProfessionalUnityAGA.library) prevent WB closed when quitting Amos Professional Unity.
- Everything works excepted Bobs/Icons that must be fixed


; ************************************************************************
; 2021.02.18
- Updated APUnity_Editor_Config.s to handle new popup windows message displaying running chipset.
- Added AmosProfessionalUnityAGA.Library build in the AMOSProUnity_library.batch
- Added informations/paths for AmosProfessionalUnityAGA.library
- Added AGA chipset detection at startup and loading of AmosProfessionalUnityAGA.library instead of AmosProfessionalUnityECS.library if AGA Chipset is detected
- Removed User Registration details calculation in ABOUT popup as they are no more used.
- Added Chipset display in the ABOUT popup (must now add true AGA Chipset detection)


; ************************************************************************
; 2021.02.16
- Checked RGB12/15/24 color conversion calls in AmosPro_UnitySupport.lib : Fixed
- Added AmosPro_UnitySupport.lib to the EditorInterpreter configuration creation process
- Re-inserted AmosPro_UnitySupport.lib in the full Build process
- Amos Professional Unity Compilation & Run : Success
- Color Conversion methods are now fully moved and calleable from AmosPro_UnitySupport.lib
---
- Due to a crash encountered using many sprites/bobs/icons, restored original AmosProUnity_Lib.s
- Updated A_BnkEffA0 and A_BnkEffBobA0 to fix issues (Crash)
- Reintegration of AmpLCallR calls : A_SHunk, A_Bnk.SaveA0, A_BnkEffA0, A_BnkEffBobA0 A_BnkReserveIC2 and A_BnkUnRev
- Reintegration of AmpLCallR calls : A_IffFormLoad, A_IffFormSize, A_IffRead, A_IffSeek, A_IffForm, A_IffFormPlay and A_IffSaveScreen
- Reintegration of AmpLCallR calls : A_InScreenOpen, InScreenDisplay, A_ScreenCopy0 and A_GetEc
- Reintegration of AmpLCallR calls : A_PalRout, A_InGetPalette2 and A_GSPal
- Reintegration of AmpLCallR calls : A_InRain and A_FnRain
- Reintegration of AmpLCallR calls : A_InPen, A_WnPp and A_GoWn
- Reintegration of AmpLCallR calls : A_UnPack_Screen and A_UnPack_Bitmap


; ************************************************************************
; 2021.02.12
; Reinserted EcCallA1, SyCallA1 and SyJmp from previous AGA version.
; Reinserted EcCall calls 77-84 from previous AGA version.
; Reinserted FMODE, BplCon3 & Color31 registers variables.


; ************************************************************************
; 2021.01.31
- Moved AmosProUnityECS.library/colorSupport_Init inside AmosProUnitySupport.lib setup
- Moved AmosProUnityECS.library/colorSupport_Functions list inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/SeparateRGBComponents inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/InputIsRGB12 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/InputIsR5G5B5 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/InputIsRGB24 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/MergeRGBComponents inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/OutputIsRGB12 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/OutputIsR5G5B5 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/OutputIsRGB24 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/ForceToRGB24 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/F24_InputIsRGB12 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/F24_InputIsR5G5B5 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/F24_InputIsRGB24 inside AmosProUnitySupport.lib
- Moved AmosProUnityECS.library/convertRGB15toRGB24 inside AmosProUnitySupport.lib
- Moved all methods to handle color conversion from AmosProUnityECS.library to AmosProUnitySupport.lib to avoid duplicate in others AmosProUnityXXX.library


; ************************************************************************
; 2021.01.18
- Updated AmosProUnityXXX.library internal structures to handle new UnitySupport.lib (replacement for previous AgaSupport.lib)


; ************************************************************************
; 2021.01.16
- Renamed Create Aga Palette Index -> Unity Create Palette Index
- Renamed Delete Aga Palette Index -> Unity Delete Palette Index
- Renamed =Aga Palette Exist(Index) -> =Unity Palette Exist(Index)
- Renamed Load Aga Palette IlbmPaletteFileName, Index -> Unity Load Palette IlbmPaletteFileName, Index
- Renamed Save Aga Palette IlbmPalketteFileName, Index -> Unity Save Palette IlbmPalettEfileName, Index
- Renamed Set Aga Palette Index -> Unity Set Palette Index
- Renamed Get Aga Palette Index -> Unity Get Palette Index
- Renamed Aga Step Fade Step  -> Unity Step Fade Step
- Renamed Aga Fade FadeDelay -> Unity Fade FadeDelay
- Renamed Fade To Aga Palette Index, Step -> Unity Fade To Palette Index, Step


; ************************************************************************
; 2020.12.19
- Exported AmosProUnit_Lib.s/InRan & FnRain to AmosProfessional_Ecs.library/ExtractedFromAmosPro_lib.s
- Rain command now support RGB12/RGB15 and RGB24 color input
- Rain command will now always output RGB24 color value.


; ************************************************************************
; 2020.12.17
- Fixed a bug that caused a crash in ForceToRGB24 conversion methods.
- Set Rainbow can now uses RGB12,RGB15 and RGB24 as input for start value (latest parameter (optional))
- Reimport commented version of CopBow method (Copper List Rainbow Creation)


; ************************************************************************
; 2020.12.16
- Added method 'ForceToRGB24' with its current set for 'F24_InputIsRGB12','F24_InputIsRGB15' and 'F24_InputIsRGB24'
- Extracted RGB15(=R5G5B5) convertion to RGB24 from 'InputIsR5G5B5' to makes it being useable from other methods as stand alone 'convertRGB15toRGB24' method


; ************************************************************************
; 2020.12.05
; - Added new set of methods to allow multiple color format using long value $CCDDDDDD where $CC = Color Format and $DDDDDD = Color Datas
; - Added colorSupport_Init to setup the newColorSupport.s file list of methods that can be called
; - Added method 'SeparateRGBComponents' with its current set for : 'InputIsRGB12', 'InputIsRGB15' and 'InputIsRGB24'
; - Added method 'MergeRGBComponents' with its current set for : 'OutputIsRGB12', 'OutputIsRGB15' and 'OutputIsRGB24'
; - Added equates with the 2 methods calls
; - Added Macro PushToRGB24 Rgb12H, Rgb12L, Rgb24Output
; - Added Macro getRGB12Datas Rgb24Input, Rgb12HOutput, Rgb12LOutput
; - Updated EcSCol to use the new getRGB12Datas Macro
; - Updated the EcGColor to use the new PushToRGB24 Macro
; - Everything tested working.


; ************************************************************************
; 2020.12.02
; - Updated EcSCol (Colour INDEX,RGB) to handle both RGB12 and RGB24 (with bit 24 set to 1)
; - Updated EcGColor ( = Colour(INDEX) ) now always return RGB24 value (with bit 24 set to 1)


; *************************************************************
; 2020.12.01
; - Extracted PacPar, Pack, InSPack6 from compact.lib to push them into AmosProUnityECS.library
; - Extracted Bnk.Reserve and Bnk.GetAdr from AmosPro.lib to push them into AmosProUnityECS.library


; *************************************************************
; 2020.11.30
; - Extracted Bnk.SaveA0, SHunk and NHunk, Bnk.UnRev to push them into AmosProUnityECS.library
; - Extracted Bnk.Ric2, AMP_BnkEffA0, AMP_BnkEffBobA0
; - Copied AmosProUnity_Loaders.s/Lst.*** methods to AmosProUnityECS.library to makes them availbale for the Bnk.*** method exported
; - Extracted InPen, WnPp, GoWn to push them into AmosProUnityECS.library


; *************************************************************
; 2020.11.25
; - Moved IffSaveScreen, SaveBMHD, SaveCAMG, SaveAMSC, SaveCMAP, SaveBODY to AmosProUnityECS.library
; - Moved InScreenOpen, InGetPalette2, GSPal, PalRout, GetEc, InScreenDisplay to AmosProUnityECS.library
; - AmosProUnity_Lib.s/L_InIffAnim2 not exported as graphical works are done inside exported methods calls.
; - Moved UnPack_Screen, UnPack_Bitmap to AmosProUnityECS.library


; *************************************************************
; 2020.11.24
; Reversed all changes concerning AmosProUnity_Lib.s extraction (restored)
; Extracted ResTempBuffer to push it into AmosProUnityECS.library
; Copied D_Open, D_OpenD1, D_Read, D_Write, D_Seek and D_Close from AmosPro_lib.s -> AmosProUnityEcs.library_ExtractedFromAmosPro_lib.s
; Imported : L_IffRead, L_IffSeek, L_IffFormPlay, L_IffFormSize, L_IffForm and L_IffFormLoad inside AmosProUnityECS.library ( As A_.... )


; *************************************************************
; 2020.11.20
; - Added AmpLVect vector to src/AmosProUnity_Equates/ExtractedFromAmosPro_Lib_Equ.s for list of AmosPro.lib extracted methods.
; - src/AmosProUnity_Equates/ExtractedFromAmosPro_Lib_Equ.s added as Include in AmosProUnity_library_equ.s
; - AmosProLibrary_Start.s/StartAll call for ampLib_Init included.


; *************************************************************
; 2020.11.18
; - Fixed AmosProUnity_Editor_Config issue
; - BuildRelease.batch Updated.            Full Amos Professional Unity Build ok.
; - Build Amos Professional Unity          completed : Tested Working
; - Update Amos Professional Unity "about" box (startup)
; - 1st working version of Amos Professional Unity is done. Initial GIT push.


; *************************************************************
; 2020.11.17 
; - Added SagaRegisters.h file with registers values and informations.
; - AmosProUnity_Compiler.batch Updated.   AmosProfessionalUnity/APUSystem/APCmp build ok.
; - AmosProUnity_Configs.batch Updated.    AmosProfessionalUnity/Interpreter configuration file build ok.
; - AmosProUnity_Editor.batch Updated.     AmosProfessionalUnity/APUSystem/AMOSProUnity_Editor build ok.
; - AmosProUnity_Exe.batch Updated.        AmosProfessionalUnity/AmosProfessionalUnity executable build ok.
; - AmosProUnity_Lib.batch Updated.        AmosProfessionalUnity/APUSystem/AmosProUnity.lib build ok.
; - AmosProUnity_Library.batch Updated.    AmosProfessionalUnity/Libs/AmosProUnityECS.library build ok.
; - AmosProUnity_Libs.batch Updated.       AmosProfessionalUnity/APUSystem/AmosProUnity_***.lib build ok.
; - AmosProUnity_Monitor.batch Updated.    AmosProfessionalUnity/APUSystem/AmosProUnity_Monitor build ok.
; - AmosProUnity_Tools.batch Updated.      Tools for ECS/AGA/SAGA build ok.


